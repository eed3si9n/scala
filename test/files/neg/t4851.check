S.scala:2: error: Adaptation of argument list by inserting () has been removed.
        signature: J(x: Any): J
  given arguments: <none>
  val x1 = new J
           ^
S.scala:3: error: Adaptation of argument list by inserting () has been removed.
        signature: J(x: Any): J
  given arguments: <none>
  val x2 = new J()
           ^
S.scala:4: warning: Adapting argument list by creating a 5-tuple: this may not be what you want.
        signature: J(x: Any): J
  given arguments: 1, 2, 3, 4, 5
 after adaptation: new J((1, 2, 3, 4, 5): (Int, Int, Int, Int, Int))
  val x3 = new J(1, 2, 3, 4, 5)
           ^
S.scala:6: warning: Adapting argument list by creating a 3-tuple: this may not be what you want.
        signature: Some.apply[A](value: A): Some[A]
  given arguments: 1, 2, 3
 after adaptation: Some((1, 2, 3): (Int, Int, Int))
  val y1 = Some(1, 2, 3)
               ^
S.scala:7: warning: Adapting argument list by creating a 3-tuple: this may not be what you want.
        signature: Some(value: A): Some[A]
  given arguments: 1, 2, 3
 after adaptation: new Some((1, 2, 3): (Int, Int, Int))
  val y2 = new Some(1, 2, 3)
           ^
S.scala:9: error: Adaptation of argument list by inserting () has been removed.
        signature: J2(x: T): J2[T]
  given arguments: <none>
  val z1 = new J2
           ^
S.scala:10: error: Adaptation of argument list by inserting () has been removed.
        signature: J2(x: T): J2[T]
  given arguments: <none>
  val z2 = new J2()
           ^
S.scala:14: warning: Adapting argument list by creating a 3-tuple: this may not be what you want.
        signature: Test.anyId(a: Any): Any
  given arguments: 1, 2, 3
 after adaptation: Test.anyId((1, 2, 3): (Int, Int, Int))
  val w1 = anyId(1, 2 ,3)
                ^
four warnings found
four errors found
